{"version":3,"sources":["User/User.js","Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["user","props","className","src","image","name","phone","href","email","dob","header","App","state","users","id","search","updateSearch","event","setState","target","value","substr","console","log","this","filteredUsers","filter","toLowerCase","indexOf","type","placeholder","onChange","bind","map","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"iTA2BeA,G,YAxBF,SAACC,GACV,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,eACX,yBAAKC,IAAKF,EAAMG,SAEpB,yBAAKF,UAAU,eACX,2BAAID,EAAMI,OAEd,yBAAKH,UAAU,eACX,2BAAID,EAAMK,QAEd,yBAAKJ,UAAU,eACX,uBAAGK,KAAMN,EAAMO,OAAQP,EAAMO,QAEjC,yBAAKN,UAAU,eACX,2BAAID,EAAMQ,UCJfC,G,MAbA,WACX,OACI,yBAAKR,UAAU,aACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,iBAAf,QACA,yBAAKA,UAAU,iBAAf,SACA,yBAAKA,UAAU,iBAAf,SACA,yBAAKA,UAAU,iBAAf,WCqEDS,E,2MAvEbC,MAAQ,CACNC,MAAO,CACL,CACEC,GAAI,EACJV,MAAO,GACPC,KAAM,qBACNC,MAAO,iBACPE,MAAO,uCACPC,IAAK,cAEP,CACEK,GAAI,EACJV,MAAO,GACPC,KAAM,WACNC,MAAO,gBACPE,MAAO,4BACPC,IAAK,cAEP,CACEK,GAAI,EACJV,MAAO,GACPC,KAAM,cACNC,MAAO,gBACPE,MAAO,oCACPC,IAAK,gBAGTM,OAAS,I,EAGXC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,OAAQE,EAAME,OAAOC,MAAMC,OAAO,EAAG,O,wEAG7C,IAAD,OACPC,QAAQC,IAAI,OAAQC,MACpB,IAAIC,EAAgBD,KAAKZ,MAAMC,MAAMa,QACnC,SAACb,GACC,OAAgF,IAAxEA,EAAMR,KAAKsB,cAAeC,QAAQ,EAAKhB,MAAMG,OAAOY,kBAIhE,OACE,yBAAKzB,UAAU,OACb,yBAAKA,UAAU,OACb,uBAAGA,UAAU,YAAb,uBAGF,2BACE2B,KAAK,OACLC,YAAY,cACZV,MAAOI,KAAKZ,MAAMG,OAClBgB,SAAUP,KAAKR,aAAagB,KAAKR,QAEnC,kBAAC,EAAD,MACCC,EAAcQ,KAAI,SAAAjC,GACjB,OACE,kBAAC,EAAD,CACEI,MAAOJ,EAAKI,MACZC,KAAML,EAAKK,KACXC,MAAON,EAAKM,MACZE,MAAOR,EAAKQ,MACZC,IAAKT,EAAKS,IACVyB,IAAKlC,EAAKc,a,GAhENqB,aCLEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCCNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDwG3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9B,QAAQ8B,MAAMA,EAAMC,c","file":"static/js/main.ee3c6f2f.chunk.js","sourcesContent":["import React from 'react';\nimport './User.css';\n\nconst user = (props) => {\n    return (\n        <div className='container'>\n            <div className='row User'>\n                <div className='col-sm Info'>\n                    <img src={props.image}></img>\n                </div>\n                <div className='col-sm Info'>\n                    <p>{props.name}</p>\n                </div>\n                <div className='col-sm Info'>\n                    <p>{props.phone}</p>\n                </div>\n                <div className='col-sm Info'>\n                    <a href={props.email}>{props.email}</a>\n                </div>\n                <div className='col-sm Info'>\n                    <p>{props.dob}</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default user;","import React from 'react';\nimport './Header.css';\n\nconst header = () => {\n    return (\n        <div className='container'>\n            <div className='row HeaderRow'>\n                <div className='col-sm Header'>Name</div>\n                <div className='col-sm Header'>Phone</div>\n                <div className='col-sm Header'>Email</div>\n                <div className='col-sm Header'>DOB</div>\n            </div>\n        </div>\n    );\n};\n\nexport default header;","import React, { Component } from 'react';\nimport './App.css';\nimport User from './User/User';\nimport Header from './Header/Header';\n\n\n\nclass App extends Component  {\n  state = {\n    users: [\n      {\n        id: 1,\n        image: \"\",\n        name: \"Christian Castillo\",\n        phone: \"(559) 578-3928\",\n        email: \"christianjcastillo@blackeyedpeas.com\",\n        dob: \"01-42-1984\"\n      },\n      {\n        id: 2,\n        image: \"\",\n        name: \"Will Iam\",\n        phone: \"(648)938-4533\",\n        email: \"willIam@blackeyedpeas.com\",\n        dob: \"03-03-1996\"\n      },\n      {\n        id: 3,\n        image: \"\",\n        name: \"Fergie Ferg\",\n        phone: \"(901)457-8245\",\n        email: \"fergalicious420@blackeyedpeas.com\",\n        dob: \"006-06-2183\"\n      }\n    ],\n    search : \"\"\n  }\n\n  updateSearch = (event) => {\n    this.setState({ search: event.target.value.substr(0, 30) });\n  }\n\n  render() {\n    console.log('this', this)\n    let filteredUsers = this.state.users.filter(\n      (users) => {\n        return (users.name.toLowerCase()).indexOf(this.state.search.toLowerCase()) !== -1;\n      }\n    );\n\n    return (\n      <div className=\"App\">\n        <nav className=\"Nav\">\n          <p className=\"NavTitle\">Employee Directory</p>\n        </nav>\n\n        <input\n          type='text'\n          placeholder='Search name'\n          value={this.state.search}\n          onChange={this.updateSearch.bind(this)} />\n\n        <Header />\n        {filteredUsers.map(user => {\n          return (\n            <User\n              image={user.image}\n              name={user.name}\n              phone={user.phone}\n              email={user.email}\n              dob={user.dob}\n              key={user.id} />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n   \n    window.location.hostname === '[::1]' ||\n  \n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    \n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n  \n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        \n        checkValidServiceWorker(swUrl, config);\n\n      \n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        \n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              \n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n             \n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              \n              console.log('Content is cached for offline use.');\n\n             \n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n \n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n     \n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n       \n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}